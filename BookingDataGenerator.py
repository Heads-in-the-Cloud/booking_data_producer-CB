import random
import requests
import json
import names


all_users = []
users = []
agents = []
flights = []

def initialize():
    global all_users
    global users
    global agents
    global flights

    response = requests.get("http://127.0.0.1:8080/lms/user/*")
    all_users = response.json()

    for user in all_users:
        if user["role_ID"] == 1:
            users.append(user)
        elif user["role_ID"] == 2:
            agents.append(user)

    response = requests.get("http://127.0.0.1:8080/lms/flight/*")
    flights = response.json()


def get_is_active():
    if random.randint(0,1) == 1:
        return "true"
    else:
        return "false"


def get_confirmation_code():
    return "AutoGenerated Confirmation Code"

# create an entry in one of (booking_agent, booking_user, booking_guest) for each booking
def user_relation(booking_id):
    selection = random.randint(1,10)
    # 50% of bookings by agents
    if selection < 6:
        # randomly select agent for this booking
        booking_agent = random.randint(0, len(agents) -1)
        booking_agent = agents[booking_agent]
        # return name of table, and user
        return ["booking_agent", booking_agent["id"]]
    # 20% by users
    elif selection < 8:
        # randomly select user for this booking
        booking_user = random.randint(0, len(users) -1)
        booking_user = users[booking_user]
        # return name of table, and user
        return ["booking_user", booking_user["id"]]
    # 30% by guests
    else:
        gender_select = "male" if random.randint(0,1) == 1 else "female"
        random_guest_name = names.get_full_name(gender=gender_select)

        domain = random.randint(1, 4)
        if domain == 1:
            domain = "@gmail.com"
        elif domain == 2:
            domain = "@yahoo.com"
        elif domain == 3:
            domain = "@protonmail.com"
        elif domain == 4:
            domain = "@mail.com"
        random_guest_email = random_guest_name.replace(" ", "-") + domain

        # phone number
        n = 10
        range_min = 10 ** (n - 1)
        range_max = (10 ** n) - 1
        rand_phone_number = random.randint(range_min, range_max)

        # return name of table, and information

        return ["booking_guest", rand_phone_number, random_guest_email]


def get_flight():
    flights_with_seats = []
    for flight in flights:
        # get number of reserved seats
        reserved_seats = flight["reservedSeats"]
        # get number of seats on the plane
        airplane_type = requests.get("http://127.0.0.1:8080/lms/airplane/" + str(flight["airplane_ID"])).json()[0]["type_id"]
        max_seats = requests.get("http://127.0.0.1:8080/lms/airplane_type/" + str(airplane_type)).json()["max_capacity"]
        # if max_seats > reserved_seats, add to flights_with_seats
        if max_seats > reserved_seats:
            flights_with_seats.append(flight)
    # randomly select a flight with seats
    if len(flights_with_seats) > 0:
        selected_flight = random.randint(0, len(flights_with_seats) - 1)
        selected_flight = flights_with_seats[selected_flight]
    return selected_flight

def payment():
    stripe_id = "Generated Stripe ID"
    # 1% of bookings are refunded
    refunded = random.randint(1,100)
    if refunded != 1:
        refunded = "false"
    else:
        refunded = "true"
    return [stripe_id, refunded]


# create entry in booking table
num_to_create = int(input("Enter the number of bookings you would like to create: "))
for i in range(num_to_create):
    initialize()
    booking = '{"id":0, "is_active":' + str(get_is_active()) + ', "confirmation_Code":"' + str(get_confirmation_code()) +'"}'
    json_booking = json.loads(booking)
    response = requests.post("http://127.0.0.1:8080/lms/booking", json=json_booking)
    print(json_booking)
    print(response)
    print(response.text)
    print(type(response.text))
    booking_id = int(response.text)

    # create entry in one of (booking_agent, booking_user, booking_guest) for booking just created
    booked_by = user_relation(booking_id)
    table = booked_by[0]
    if len(booked_by) == 3:
        booked_by = '{"booking_ID":' + str(booking_id) + ', "email":"' +\
                    str(booked_by[2]) + '", "phone":"' + str(booked_by[1]) + '"}'
    else:
        if str(table) == "booking_agent":
            booked_by = '{"booking_ID":' + str(booking_id) + ', "agent_ID":' + str(booked_by[1]) + '}'
        elif str(table) == "booking_user":
            booked_by = '{"booking_ID":' + str(booking_id) + ', "user_ID":' + str(booked_by[1]) + '}'

    json_booked_by = json.loads(booked_by)
    response = requests.post("http://127.0.0.1:8080/lms/" + str(table), json=json_booked_by)
    print(response)
    print(response.text)
    print(type(response.text))

    # relate booking to a flight in flight_bookings
    flight = get_flight()
    flight_id = flight["id"]
    flight_relation = '{"flight_ID":' + str(flight_id) + ', "booking_ID":' + str(booking_id) + '}'
    json_flight_relation = json.loads(flight_relation)
    response = requests.post("http://127.0.0.1:8080/lms/flight_booking", json=json_flight_relation)
    print(response)
    print(response.text)
    print(type(response.text))

    # update flight with one more reserved seat
    curr_reserved = int(flight["reservedSeats"])
    print(str(flight))
    print("+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++")
    curr_reserved += 1
    flight["reservedSeats"] = curr_reserved
    print(str(flight))
    flight = str(flight).replace("'", "\"")
    print(str(flight))
    json_flight = json.loads('[' + str(flight) + ',' + str(flight) +']')
    response = requests.patch("http://127.0.0.1:8080/lms/flight", json=json_flight)
    print(response)
    print(response.text)
    print(type(response.text))

    # add entry for booking_payment
    payment_info = payment()
    booking_payment = '{"booking_ID":' + str(booking_id) + ', "stripe":"' + str(payment_info[0]) +\
                      '", "refund":' + str(payment_info[1]) + '}'
    json_booking_payment = json.loads(booking_payment)
    response = requests.post("http://127.0.0.1:8080/lms/booking_payment", json=json_booking_payment)
    print(response)
    print(response.text)
    print(type(response.text))

